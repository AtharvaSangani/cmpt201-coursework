Last login: Sun Oct 26 21:11:39 on ttys001
channpreetkaur@Channpreets-MacBook-Air ~ % docker exec -it cmpt201 zsh --login

Ｗｅｌｃｏｍｅ  ｔｏ  ＣＭＰＴ  ２０１！

"The functional programmer sounds rather like a mediæval monk, denying himself the pleasures of life in the hope that it will make him virtuous."
	-- John Hughes, Why Functional Programming Matters

~❯ ls
cmpt201-coursework  log.c  start_here.sh  units
~❯ cd cmpt201-coursework/
~/cmpt201-coursework❯ ls
lab0  lab1  lab3  lab4  lab5  lab5.c  README.md
~/cmpt201-coursework❯ mkdir lab6
55│ int index_of(uint64_t data) {
~/cmpt201-coursework❯ cd lab6
~/cmpt201-coursework/lab6❯ nvim example_1.c
~/cmpt201-coursework/lab6❯ nvim example_2.c
~/cmpt201-coursework/lab6❯ nvim CMakeLists.txt
~/cmpt201-coursework/lab6❯ make example_1.c
make: Nothing to be done for 'example_1.c'.
55│ int index_of(uint64_t data) {
56│   node_t *curr = head;
57│   int index = 0;
58│
59│   while (curr != NULL) {
60│     if (curr->data == data) {
61│       return index;
62│     }
63│
24│ typedef struct node {
25│   uint64_t data;
26│   struct node *next;
27│ } node_t;
28│
29│ node_t *head = NULL;
24│ typedef struct node {
25│   uint64_t data;
26│   struct node *next;
~/cmpt201-coursework/lab6❯ make ./
/usr/bin/clang      -o .o
clang: error: no input files
make: *** [<builtin>: .o] Error 1
~/cmpt201-coursework/lab6❯ nvim CMakeLists.txt
~/cmpt201-coursework/lab6❯ make example1
make: *** No rule to make target 'example1'.  Stop.
~/cmpt201-coursework/lab6❯ make ./example1
make: *** No rule to make target 'example1'.  Stop.
~/cmpt201-coursework/lab6❯ cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug
-- The C compiler identification is Clang 18.1.3
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/clang - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Configuring done (0.2s)
-- Generating done (0.0s)
-- Build files have been written to: /home/cmpt201/cmpt201-coursework/lab6/build
~/cmpt201-coursework/lab6❯ cd build
~/cmpt201-coursework/lab6/build❯ make ./example1
[ 50%] Building C object CMakeFiles/example1.dir/example_1.c.o
[100%] Linking C executable example1
[100%] Built target example1
~/cmpt201-coursework/lab6/build❯ ./example1
Test failed: index_of(3) == 2
~/cmpt201-coursework/lab6/build❯ cgdb ./example1
~/cmpt201-coursework/lab6/build❯ make
[ 50%] Built target example1
[ 75%] Building C object CMakeFiles/example2.dir/example_2.c.o
[100%] Linking C executable example2
[100%] Built target example2
~/cmpt201-coursework/lab6/build❯ cgdb ./example1
~/cmpt201-coursework/lab6/build❯ nvim example_1.c
~/cmpt201-coursework/lab6/build❯ rm example_1.c
~/cmpt201-coursework/lab6/build❯ cd ..
~/cmpt201-coursework/lab6❯ nvim example_1.c
~/cmpt201-coursework/lab6❯ make ./example1
make: *** No rule to make target 'example1'.  Stop.
~/cmpt201-coursework/lab6❯ cd build
~/cmpt201-coursework/lab6/build❯ make ./example1
[ 50%] Building C object CMakeFiles/example1.dir/example_1.c.o
[100%] Linking C executable example1
 example_1.c
  1 #include <stdbool.h>
  2 #include <stdint.h>
  3 #include <stdio.h>
  4 #include <stdlib.h>
  5
  6 #define ASSERT(expr)                                                           \
  7 ┆ {                                                                            \
  8 ┆ ┆ if (!(expr)) {                                                             \
  9 ┆ ┆ ┆ fprintf(stderr, "Assertion failed: %s\n", #expr);                        \
 10 ┆ ┆ ┆ exit(1);                                                                 \
 11 ┆ ┆ }                                                                          \
 12 ┆ }
 13
 14 #define TEST(expr)                                                             \
 15 ┆ {                                                                            \
 16 ┆ ┆ if (!(expr)) {                                                             \
 17 ┆ ┆ ┆ fprintf(stderr, "Test failed: %s\n", #expr);                             \
 18 ┆ ┆ ┆ exit(1);                                                                 \
 19 ┆ ┆ } else {                                                                   \
 20 ┆ ┆ ┆ printf("Test passed: %s\n", #expr);                                      \
 21 ┆ ┆ }                                                                          \
 22 ┆ }
 23
 24 typedef struct node {
 25 ┆ uint64_t data;
 26 ┆ struct node *next;
 27 } node_t;
 28
 29 node_t *head = NULL;
 30
 31 void insert_sorted(uint64_t data) {
 NORMAL  example_1.c                                                                             OK  unix | utf-8 | c    1%    1:1

